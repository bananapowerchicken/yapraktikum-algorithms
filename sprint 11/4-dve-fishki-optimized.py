# Рита и Гоша играют в игру. У Риты есть n фишек, на каждой из которых написано
# количество очков. Сначала Гоша называет число k, затем Рита должна выбрать
# две фишки, сумма очков на которых равна заданному числу.
# Рите надоело искать фишки самой, и она решила применить свои навыки
# программирования для решения этой задачи. Помогите ей написать программу для
# поиска нужных фишек.  Фишки лежат на столе в порядке неубывания очков на них

n = int(input())  #  натуральное число n, количество фишек
fishki = list(map(int, input().split()))  #  сами фишки
target_sum = int(input())   # целевая сумма

# # A - оптимизация с двумя указателями на разных концах массива
# # сортируем по возрастанию - сортировка уже есть по условиям задачи
# # сравниваем два крайних эл-та
# # если из сумма совпала с целевой - радуемся
# # если больше - от большего эл-та переходим к его минимальному соседу
# # если меньше - от меньшего эл-та переходим к его максимальному соседу

# # указатели на концы массива
# p1 = 0
# p2 = n-1
# while p1 != p2:
#     curr_sum = fishki[p1] + fishki[p2]
#     if curr_sum==target_sum:
#         print(fishki[p1], fishki[p2])
#         break
#     elif curr_sum > target_sum:
#         p2-=1
#     else:
#         p1+=1

# if (p1 == p2):
#     print("None")


# B - с использованием дополнительной памяти, нового массива так сказать
twin_set = set(fishki)  # слетает сортировка, но можно проверять наличие эл-та

for i in range(n):
    if fishki[i] in twin_set:
        twin_set.remove(fishki[i])
    if (target_sum-fishki[i] in twin_set):
        print(fishki[i], target_sum-fishki[i])
        break
    if i==n-1:
        print("None")
